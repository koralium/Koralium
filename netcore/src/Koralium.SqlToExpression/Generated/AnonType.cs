/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// <auto-generated />

using System;

namespace Koralium.SqlToExpression.Generated
{
    [System.Diagnostics.CodeAnalysis.SuppressMessage("Major Code Smell", "S1118:Utility classes should not have public constructors", Justification = "Used for empty AnonType with no properties")]
    internal class AnonType
    {
        private static Type[] anonTypes = new Type[]
            {
                typeof(AnonType),
                typeof(AnonType<>),
                typeof(AnonType<,>),
                typeof(AnonType<,,>),
                typeof(AnonType<,,,>),
                typeof(AnonType<,,,,>),
                typeof(AnonType<,,,,,>),
                typeof(AnonType<,,,,,,>),
                typeof(AnonType<,,,,,,,>),
                typeof(AnonType<,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>),
                typeof(AnonType<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>)
            };

        public static Type GetAnonType(params Type[] propertyTypes)
        {
            return anonTypes[propertyTypes.Length].MakeGenericType(propertyTypes);
        }
    }

    internal class AnonType<P_0> 
    {
        public P_0 P0 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0> o)
            {
                return
                    Equals(P0, o.P0);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0
            );
        }
    }

    internal class AnonType<P_0, P_1> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }
        public P_43 P43 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42) &&
                    Equals(P43, o.P43);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }
        public P_43 P43 { get; set; }
        public P_44 P44 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42) &&
                    Equals(P43, o.P43) &&
                    Equals(P44, o.P44);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }
        public P_43 P43 { get; set; }
        public P_44 P44 { get; set; }
        public P_45 P45 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42) &&
                    Equals(P43, o.P43) &&
                    Equals(P44, o.P44) &&
                    Equals(P45, o.P45);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45, P_46> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }
        public P_43 P43 { get; set; }
        public P_44 P44 { get; set; }
        public P_45 P45 { get; set; }
        public P_46 P46 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45, P_46> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42) &&
                    Equals(P43, o.P43) &&
                    Equals(P44, o.P44) &&
                    Equals(P45, o.P45) &&
                    Equals(P46, o.P46);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45, P_46, P_47> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }
        public P_43 P43 { get; set; }
        public P_44 P44 { get; set; }
        public P_45 P45 { get; set; }
        public P_46 P46 { get; set; }
        public P_47 P47 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45, P_46, P_47> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42) &&
                    Equals(P43, o.P43) &&
                    Equals(P44, o.P44) &&
                    Equals(P45, o.P45) &&
                    Equals(P46, o.P46) &&
                    Equals(P47, o.P47);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

    internal class AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45, P_46, P_47, P_48> 
    {
        public P_0 P0 { get; set; }
        public P_1 P1 { get; set; }
        public P_2 P2 { get; set; }
        public P_3 P3 { get; set; }
        public P_4 P4 { get; set; }
        public P_5 P5 { get; set; }
        public P_6 P6 { get; set; }
        public P_7 P7 { get; set; }
        public P_8 P8 { get; set; }
        public P_9 P9 { get; set; }
        public P_10 P10 { get; set; }
        public P_11 P11 { get; set; }
        public P_12 P12 { get; set; }
        public P_13 P13 { get; set; }
        public P_14 P14 { get; set; }
        public P_15 P15 { get; set; }
        public P_16 P16 { get; set; }
        public P_17 P17 { get; set; }
        public P_18 P18 { get; set; }
        public P_19 P19 { get; set; }
        public P_20 P20 { get; set; }
        public P_21 P21 { get; set; }
        public P_22 P22 { get; set; }
        public P_23 P23 { get; set; }
        public P_24 P24 { get; set; }
        public P_25 P25 { get; set; }
        public P_26 P26 { get; set; }
        public P_27 P27 { get; set; }
        public P_28 P28 { get; set; }
        public P_29 P29 { get; set; }
        public P_30 P30 { get; set; }
        public P_31 P31 { get; set; }
        public P_32 P32 { get; set; }
        public P_33 P33 { get; set; }
        public P_34 P34 { get; set; }
        public P_35 P35 { get; set; }
        public P_36 P36 { get; set; }
        public P_37 P37 { get; set; }
        public P_38 P38 { get; set; }
        public P_39 P39 { get; set; }
        public P_40 P40 { get; set; }
        public P_41 P41 { get; set; }
        public P_42 P42 { get; set; }
        public P_43 P43 { get; set; }
        public P_44 P44 { get; set; }
        public P_45 P45 { get; set; }
        public P_46 P46 { get; set; }
        public P_47 P47 { get; set; }
        public P_48 P48 { get; set; }

        public override bool Equals(object obj)
        {
            if (obj is AnonType<P_0, P_1, P_2, P_3, P_4, P_5, P_6, P_7, P_8, P_9, P_10, P_11, P_12, P_13, P_14, P_15, P_16, P_17, P_18, P_19, P_20, P_21, P_22, P_23, P_24, P_25, P_26, P_27, P_28, P_29, P_30, P_31, P_32, P_33, P_34, P_35, P_36, P_37, P_38, P_39, P_40, P_41, P_42, P_43, P_44, P_45, P_46, P_47, P_48> o)
            {
                return
                    Equals(P0, o.P0) &&
                    Equals(P1, o.P1) &&
                    Equals(P2, o.P2) &&
                    Equals(P3, o.P3) &&
                    Equals(P4, o.P4) &&
                    Equals(P5, o.P5) &&
                    Equals(P6, o.P6) &&
                    Equals(P7, o.P7) &&
                    Equals(P8, o.P8) &&
                    Equals(P9, o.P9) &&
                    Equals(P10, o.P10) &&
                    Equals(P11, o.P11) &&
                    Equals(P12, o.P12) &&
                    Equals(P13, o.P13) &&
                    Equals(P14, o.P14) &&
                    Equals(P15, o.P15) &&
                    Equals(P16, o.P16) &&
                    Equals(P17, o.P17) &&
                    Equals(P18, o.P18) &&
                    Equals(P19, o.P19) &&
                    Equals(P20, o.P20) &&
                    Equals(P21, o.P21) &&
                    Equals(P22, o.P22) &&
                    Equals(P23, o.P23) &&
                    Equals(P24, o.P24) &&
                    Equals(P25, o.P25) &&
                    Equals(P26, o.P26) &&
                    Equals(P27, o.P27) &&
                    Equals(P28, o.P28) &&
                    Equals(P29, o.P29) &&
                    Equals(P30, o.P30) &&
                    Equals(P31, o.P31) &&
                    Equals(P32, o.P32) &&
                    Equals(P33, o.P33) &&
                    Equals(P34, o.P34) &&
                    Equals(P35, o.P35) &&
                    Equals(P36, o.P36) &&
                    Equals(P37, o.P37) &&
                    Equals(P38, o.P38) &&
                    Equals(P39, o.P39) &&
                    Equals(P40, o.P40) &&
                    Equals(P41, o.P41) &&
                    Equals(P42, o.P42) &&
                    Equals(P43, o.P43) &&
                    Equals(P44, o.P44) &&
                    Equals(P45, o.P45) &&
                    Equals(P46, o.P46) &&
                    Equals(P47, o.P47) &&
                    Equals(P48, o.P48);
            }
            return false;
        }

        public override int GetHashCode()
        {
            return HashCode.Combine(
                P0,
                P1,
                P2,
                P3,
                P4,
                P5,
                P6,
                P7
            );
        }
    }

}

