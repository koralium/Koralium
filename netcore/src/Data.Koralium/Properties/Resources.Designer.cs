 


// <auto-generated />

using System.Reflection;
using System.Resources;

#nullable enable

namespace Data.Koralium.Properties
{
    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Data.Koralium.Properties.Resources", typeof(Resources).Assembly);

        /// <summary>
        /// Buffer is smaller than the sent in length
        /// </summary>
        public static string BufferSmallerThanLength
            => GetString("BufferSmallerThanLength");

        /// <summary>
        /// Data reader is closed.
        /// </summary>
        public static string DataReaderClosed
            => GetString("DataReaderClosed");

        /// <summary>
        /// End of the result set has been reached, call NextResult() to get another result set.
        /// </summary>
        public static string EndOfResultSet
            => GetString("EndOfResultSet");

        /// <summary>
        /// Expected binary array
        /// </summary>
        public static string ExpectedBinaryArray
            => GetString("ExpectedBinaryArray");

        /// <summary>
        /// Expected string array
        /// </summary>
        public static string ExpectedStringArray
            => GetString("ExpectedStringArray");

        /// <summary>
        /// No characters in string
        /// </summary>
        public static string NoCharactersInString
            => GetString("NoCharactersInString");

        /// <summary>
        /// Matching columns to properties uses ignore case, and multiple properties was found with the name {propertyName}
        /// </summary>
        public static string NonUniquePropertyName(object propertyName)
            => string.Format(
                GetString("NonUniquePropertyName", nameof(propertyName)),
                propertyName);

        /// <summary>
        /// No data has been read, did you call Read?
        /// </summary>
        public static string NoRead
            => GetString("NoRead");

        /// <summary>
        /// '{value}' is not a valid guid.
        /// </summary>
        public static string NotAValidGuid(object value)
            => string.Format(
                GetString("NotAValidGuid", nameof(value)),
                value);

        /// <summary>
        /// A column with ordinal '{ordinal}' does not exist, the highest count is '{fieldCount}'
        /// </summary>
        public static string OrdinalNotFound(object ordinal, object fieldCount)
            => string.Format(
                GetString("OrdinalNotFound", nameof(ordinal), nameof(fieldCount)),
                ordinal, fieldCount);

        /// <summary>
        /// String contains more than one character
        /// </summary>
        public static string StringContainsMultipleCharacters
            => GetString("StringContainsMultipleCharacters");

        /// <summary>
        /// Unknown data reader state '{state}'
        /// </summary>
        public static string UnknownDataReaderState(object state)
            => string.Format(
                GetString("UnknownDataReaderState", nameof(state)),
                state);

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name)!;
            for (var i = 0; i < formatterNames.Length; i++)
            {
                value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
            }

            return value;
        }
    }
}
